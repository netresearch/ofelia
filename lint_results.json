{"Issues":[{"FromLinter":"gocyclo","Text":"cyclomatic complexity 22 of func `(*Validator2).validateSpecificStringField` is high (\u003e 15)","Severity":"","SourceLines":["func (cv *Validator2) validateSpecificStringField(v *Validator, path string, str string) {"],"Pos":{"Filename":"config/validator.go","Offset":7922,"Line":313,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"line-length-limit: line is 236 characters, out of limit 140","Severity":"warning","SourceLines":["\t\tsqlInjectionPattern: regexp.MustCompile(`(?i)(union|select|insert|update|delete|drop|create|alter|exec|execute|script|javascript|eval|setTimeout|setInterval|function|onload|onerror|onclick|\u003cscript|\u003ciframe|\u003cobject|\u003cembed|\u003cimg)`),"],"Pos":{"Filename":"config/sanitizer.go","Offset":0,"Line":26,"Column":0},"LineRange":{"From":26,"To":26},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"line-length-limit: line is 279 characters, out of limit 140","Severity":"warning","SourceLines":["\timagePattern := regexp.MustCompile(`^(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-_]*[a-zA-Z0-9])?\\.)*[a-zA-Z0-9](?:[a-zA-Z0-9-_]*[a-zA-Z0-9])?(?::[0-9]+)?\\/)?[a-z0-9]+(?:[._-][a-z0-9]+)*(?:\\/[a-z0-9]+(?:[._-][a-z0-9]+)*)*(?::[a-zA-Z0-9_][a-zA-Z0-9._-]{0,127})?(?:@sha256:[a-f0-9]{64})?$`)"],"Pos":{"Filename":"config/sanitizer.go","Offset":0,"Line":187,"Column":0},"LineRange":{"From":187,"To":187},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"exhaustive","Text":"missing cases in switch of type reflect.Kind: reflect.Invalid, reflect.Bool, reflect.Int8, reflect.Int16, reflect.Int32, reflect.Uint, reflect.Uint8, reflect.Uint16, reflect.Uint32, reflect.Uint64, reflect.Uintptr, reflect.Float32, reflect.Float64, reflect.Complex64, reflect.Complex128, reflect.Array, reflect.Chan, reflect.Func, reflect.Interface, reflect.Map, reflect.Pointer|reflect.Ptr, reflect.Struct, reflect.UnsafePointer","Severity":"","SourceLines":["\tswitch field.Kind() {"],"Pos":{"Filename":"config/validator.go","Offset":7079,"Line":282,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"","SourceLines":["\tdangerousPatterns  []*regexp.Regexp"],"Pos":{"Filename":"config/command_validator.go","Offset":322,"Line":15,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":322,"End":358,"NewText":"CWRhbmdlcm91c1BhdHRlcm5zIFtdKnJlZ2V4cC5SZWdleHA="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"","SourceLines":["\tsqlInjectionPattern  *regexp.Regexp"],"Pos":{"Filename":"config/sanitizer.go","Offset":251,"Line":16,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":251,"End":287,"NewText":"CXNxbEluamVjdGlvblBhdHRlcm4gICAqcmVnZXhwLlJlZ2V4cA=="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gci","Text":"File is not properly formatted","Severity":"","SourceLines":["\t"],"Pos":{"Filename":"config/validator.go","Offset":8300,"Line":322,"Column":1},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":8300,"End":8301,"NewText":null}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"prealloc","Text":"Consider pre-allocating `messages`","Severity":"","SourceLines":["\tvar messages []string"],"Pos":{"Filename":"config/validator.go","Offset":535,"Line":28,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"predeclared","Text":"param min has same name as predeclared identifier","Severity":"","SourceLines":["func (s *Sanitizer) validateCronField(field string, min, max int, fieldName string) error {"],"Pos":{"Filename":"config/sanitizer.go","Offset":8125,"Line":276,"Column":53},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"predeclared","Text":"param min has same name as predeclared identifier","Severity":"","SourceLines":["func (v *Validator) ValidateMinLength(field string, value string, min int) {"],"Pos":{"Filename":"config/validator.go","Offset":1702,"Line":74,"Column":67},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"predeclared","Text":"param max has same name as predeclared identifier","Severity":"","SourceLines":["func (v *Validator) ValidateMaxLength(field string, value string, max int) {"],"Pos":{"Filename":"config/validator.go","Offset":1940,"Line":81,"Column":67},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"predeclared","Text":"param min has same name as predeclared identifier","Severity":"","SourceLines":["func (v *Validator) ValidateRange(field string, value int, min, max int) {"],"Pos":{"Filename":"config/validator.go","Offset":2174,"Line":88,"Column":60},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"staticcheck","Text":"SA9003: empty branch","Severity":"","SourceLines":["\tif strings.Contains(field, \",\") {"],"Pos":{"Filename":"config/sanitizer.go","Offset":8773,"Line":301,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unparam","Text":"`(*Validator2).validateField` - `fieldType` is unused","Severity":"","SourceLines":["func (cv *Validator2) validateField(v *Validator, field reflect.Value, fieldType reflect.StructField, path string, defaultTag string) {"],"Pos":{"Filename":"config/validator.go","Offset":7013,"Line":281,"Column":72},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"line-length-limit: line is 141 characters, out of limit 140","Severity":"warning","SourceLines":["func (lo *LogsOperations) GetLogsSince(containerID string, since time.Time, stdout, stderr bool, outputStream, errorStream io.Writer) error {"],"Pos":{"Filename":"core/docker_client.go","Offset":0,"Line":258,"Column":0},"LineRange":{"From":258,"To":258},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unconvert","Text":"unnecessary conversion","Severity":"","SourceLines":["\tif int64(buf.Size()) == bp.size {"],"Pos":{"Filename":"core/buffer_pool.go","Offset":0,"Line":69,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"func `(*ContainerMonitor).waitWithWaitAPI` is unused","Severity":"","SourceLines":["func (cm *ContainerMonitor) waitWithWaitAPI(containerID string, maxRuntime time.Duration) (*docker.State, error) {"],"Pos":{"Filename":"core/container_monitor.go","Offset":5040,"Line":176,"Column":29},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"func `(*RunJob).searchLocalImage` is unused","Severity":"","SourceLines":["func (j *RunJob) searchLocalImage() error {"],"Pos":{"Filename":"core/runjob.go","Offset":4752,"Line":172,"Column":18},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"field `mu` is unused","Severity":"","SourceLines":["\tmu              sync.RWMutex"],"Pos":{"Filename":"core/shutdown.go","Offset":3738,"Line":162,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"errorlint","Text":"type assertion on error will fail on wrapped errors. Use errors.As to check for specific errors","Severity":"","SourceLines":["\t\t\tif dockerErr, ok := err.(*docker.Error); ok {"],"Pos":{"Filename":"core/resilient_job.go","Offset":1069,"Line":45,"Column":24},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"exhaustive","Text":"missing cases in switch of type core.CircuitBreakerState: core.StateOpen","Severity":"","SourceLines":["\tswitch cb.state {"],"Pos":{"Filename":"core/resilience.go","Offset":4646,"Line":209,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"exhaustive","Text":"missing cases in switch of type core.CircuitBreakerState: core.StateOpen","Severity":"","SourceLines":["\tswitch cb.state {"],"Pos":{"Filename":"core/resilience.go","Offset":5087,"Line":230,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"misspell","Text":"`cancelled` is a misspelling of `canceled`","Severity":"","SourceLines":["\t\t\treturn fmt.Errorf(\"retry cancelled: %w\", ctx.Err())"],"Pos":{"Filename":"core/resilience.go","Offset":1615,"Line":74,"Column":29},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":1615,"End":1624,"NewText":"Y2FuY2VsZWQ="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"misspell","Text":"`cancelled` is a misspelling of `canceled`","Severity":"","SourceLines":["\t\treturn fmt.Errorf(\"bulkhead '%s' context cancelled: %w\", b.name, ctx.Err())"],"Pos":{"Filename":"core/resilience.go","Offset":9377,"Line":412,"Column":44},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":9377,"End":9386,"NewText":"Y2FuY2VsZWQ="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"misspell","Text":"`cancelled` is a misspelling of `canceled`","Severity":"","SourceLines":["\t// Create a context that can be cancelled during shutdown"],"Pos":{"Filename":"core/shutdown.go","Offset":4563,"Line":192,"Column":34},"SuggestedFixes":[{"Message":"","TextEdits":[{"Pos":4563,"End":4572,"NewText":"Y2FuY2VsZWQ="}]}],"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"paralleltest","Text":"Function TestLogrusAdapterFunctions missing the call to method parallel\n","Severity":"","SourceLines":["func TestLogrusAdapterFunctions(t *testing.T) {"],"Pos":{"Filename":"core/additional_tests.go","Offset":6188,"Line":321,"Column":1},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"prealloc","Text":"Consider pre-allocating `errors`","Severity":"","SourceLines":["\tvar errors []error"],"Pos":{"Filename":"core/shutdown.go","Offset":3042,"Line":133,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"predeclared","Text":"param max has same name as predeclared identifier","Severity":"","SourceLines":["func (s *Scheduler) SetMaxConcurrentJobs(max int) {"],"Pos":{"Filename":"core/scheduler.go","Offset":1932,"Line":74,"Column":42},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unparam","Text":"`(*ResilientJobExecutor).recordMetrics` - `success` is unused","Severity":"","SourceLines":["func (rje *ResilientJobExecutor) recordMetrics(success bool) {"],"Pos":{"Filename":"core/resilient_job.go","Offset":3853,"Line":147,"Column":48},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from interface method should be wrapped: sig: func (context.Context).Err() error","Severity":"","SourceLines":["\t\t\treturn nil, ctx.Err()"],"Pos":{"Filename":"core/container_monitor.go","Offset":4299,"Line":147,"Column":16},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func (*github.com/fsouza/go-dockerclient.Client).Logs(opts github.com/fsouza/go-dockerclient.LogsOptions) error","Severity":"","SourceLines":["\treturn cm.client.Logs(opts)"],"Pos":{"Filename":"core/container_monitor.go","Offset":7711,"Line":276,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from interface method should be wrapped: sig: func (context.Context).Err() error","Severity":"","SourceLines":["\t\t\treturn ctx.Err()"],"Pos":{"Filename":"core/resilience.go","Offset":8403,"Line":370,"Column":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from interface method should be wrapped: sig: func (github.com/netresearch/ofelia/core.Job).Run(*github.com/netresearch/ofelia/core.Context) error","Severity":"","SourceLines":["\treturn err"],"Pos":{"Filename":"core/resilient_job.go","Offset":3756,"Line":143,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func (*net/http.Server).Shutdown(ctx context.Context) error","Severity":"","SourceLines":["\t\treturn err"],"Pos":{"Filename":"core/shutdown.go","Offset":6716,"Line":274,"Column":10},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"goconst","Text":"string `gauge` has 3 occurrences, make it a constant","Severity":"","SourceLines":["\t\tif metric.Type == \"gauge\" {"],"Pos":{"Filename":"metrics/prometheus.go","Offset":2334,"Line":96,"Column":21},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"exported: type name will be used as metrics.MetricsCollector by other packages, and that stutters; consider calling this Collector","Severity":"warning","SourceLines":["type MetricsCollector struct {"],"Pos":{"Filename":"metrics/prometheus.go","Offset":122,"Line":11,"Column":6},"LineRange":{"From":11,"To":11},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"govet","Text":"copylocks: assignment copies lock value to newLogger: github.com/netresearch/ofelia/logging.StructuredLogger contains sync.RWMutex","Severity":"","SourceLines":["\tnewLogger := *l"],"Pos":{"Filename":"logging/structured.go","Offset":3261,"Line":144,"Column":15},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'stack_trace' want 'stackTrace'","Severity":"","SourceLines":["\tStackTrace    string                 `json:\"stack_trace,omitempty\"`"],"Pos":{"Filename":"logging/structured.go","Offset":903,"Line":48,"Column":39},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'correlation_id' want 'correlationId'","Severity":"","SourceLines":["\tCorrelationID string                 `json:\"correlation_id,omitempty\"`"],"Pos":{"Filename":"logging/structured.go","Offset":972,"Line":49,"Column":39},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"goconst","Text":"string `Bearer` has 4 occurrences, make it a constant","Severity":"","SourceLines":["\t\t\tif len(parts) != 2 || parts[0] != \"Bearer\" {"],"Pos":{"Filename":"web/auth.go","Offset":3389,"Line":139,"Column":38},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"line-length-limit: line is 161 characters, out of limit 140","Severity":"warning","SourceLines":["\t\t\tc.logger.Warningf(\"Ignoring %d local jobs from Docker labels due to security policy. Set allow-host-jobs-from-labels=true to enable\", len(localJobs))"],"Pos":{"Filename":"cli/docker-labels.go","Offset":0,"Line":31,"Column":0},"LineRange":{"From":31,"To":31},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"line-length-limit: line is 165 characters, out of limit 140","Severity":"warning","SourceLines":["\t\t\tc.logger.Warningf(\"Ignoring %d compose jobs from Docker labels due to security policy. Set allow-host-jobs-from-labels=true to enable\", len(composeJobs))"],"Pos":{"Filename":"cli/docker-labels.go","Offset":0,"Line":35,"Column":0},"LineRange":{"From":35,"To":35},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"revive","Text":"line-length-limit: line is 141 characters, out of limit 140","Severity":"warning","SourceLines":["\t\tAllowHostJobsFromLabels bool          `gcfg:\"allow-host-jobs-from-labels\" mapstructure:\"allow-host-jobs-from-labels\" default:\"false\"`"],"Pos":{"Filename":"cli/config.go","Offset":0,"Line":51,"Column":0},"LineRange":{"From":51,"To":51},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"unused","Text":"func `csrfMiddleware` is unused","Severity":"","SourceLines":["func csrfMiddleware(tm *SecureTokenManager) func(http.Handler) http.Handler {"],"Pos":{"Filename":"web/auth_secure.go","Offset":8938,"Line":353,"Column":6},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"forbidigo","Text":"use of `fmt.Printf` forbidden by pattern `^fmt\\.Print.*$`","Severity":"","SourceLines":["\t\tfmt.Printf(\"[%s] %s\\n\", level, msg)"],"Pos":{"Filename":"test/testlogger.go","Offset":2185,"Line":89,"Column":3},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"gocritic","Text":"ifElseChain: rewrite if-else to switch statement","Severity":"","SourceLines":["\tif memoryUsagePercent \u003e 90 {"],"Pos":{"Filename":"web/health.go","Offset":4383,"Line":174,"Column":2},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'password_hash' want 'passwordHash'","Severity":"","SourceLines":["\tPasswordHash string `json:\"password_hash\"` // bcrypt hash of password (preferred)"],"Pos":{"Filename":"web/auth.go","Offset":395,"Line":20,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'secret_key' want 'secretKey'","Severity":"","SourceLines":["\tSecretKey    string `json:\"secret_key\"`"],"Pos":{"Filename":"web/auth.go","Offset":478,"Line":21,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'token_expiry' want 'tokenExpiry'","Severity":"","SourceLines":["\tTokenExpiry  int    `json:\"token_expiry\"` // in hours"],"Pos":{"Filename":"web/auth.go","Offset":519,"Line":22,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'expires_at' want 'expiresAt'","Severity":"","SourceLines":["\tExpiresAt time.Time `json:\"expires_at\"`"],"Pos":{"Filename":"web/auth.go","Offset":868,"Line":35,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'password_hash' want 'passwordHash'","Severity":"","SourceLines":["\tPasswordHash string `json:\"password_hash\"` // bcrypt hash of password"],"Pos":{"Filename":"web/auth_secure.go","Offset":387,"Line":22,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'secret_key' want 'secretKey'","Severity":"","SourceLines":["\tSecretKey    string `json:\"secret_key\"`"],"Pos":{"Filename":"web/auth_secure.go","Offset":458,"Line":23,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'token_expiry' want 'tokenExpiry'","Severity":"","SourceLines":["\tTokenExpiry  int    `json:\"token_expiry\"` // in hours"],"Pos":{"Filename":"web/auth_secure.go","Offset":499,"Line":24,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'max_attempts' want 'maxAttempts'","Severity":"","SourceLines":["\tMaxAttempts  int    `json:\"max_attempts\"` // max login attempts per minute"],"Pos":{"Filename":"web/auth_secure.go","Offset":554,"Line":25,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'last_checked' want 'lastChecked'","Severity":"","SourceLines":["\tLastChecked time.Time     `json:\"last_checked\"`"],"Pos":{"Filename":"web/health.go","Offset":602,"Line":27,"Column":28},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'duration_ms' want 'durationMs'","Severity":"","SourceLines":["\tDuration    time.Duration `json:\"duration_ms\"`"],"Pos":{"Filename":"web/health.go","Offset":651,"Line":28,"Column":28},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'uptime_seconds' want 'uptimeSeconds'","Severity":"","SourceLines":["\tUptime    float64                `json:\"uptime_seconds\"`"],"Pos":{"Filename":"web/health.go","Offset":896,"Line":35,"Column":35},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'go_version' want 'goVersion'","Severity":"","SourceLines":["\tGoVersion    string `json:\"go_version\"`"],"Pos":{"Filename":"web/health.go","Offset":1168,"Line":43,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'memory_alloc_bytes' want 'memoryAllocBytes'","Severity":"","SourceLines":["\tMemoryAlloc  uint64 `json:\"memory_alloc_bytes\"`"],"Pos":{"Filename":"web/health.go","Offset":1285,"Line":46,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'memory_total_bytes' want 'memoryTotalBytes'","Severity":"","SourceLines":["\tMemoryTotal  uint64 `json:\"memory_total_bytes\"`"],"Pos":{"Filename":"web/health.go","Offset":1334,"Line":47,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'gc_runs' want 'gcRuns'","Severity":"","SourceLines":["\tGCRuns       uint32 `json:\"gc_runs\"`"],"Pos":{"Filename":"web/health.go","Offset":1383,"Line":48,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'expires_at' want 'expiresAt'","Severity":"","SourceLines":["\tExpiresAt time.Time `json:\"expires_at\"`"],"Pos":{"Filename":"web/jwt_handlers.go","Offset":729,"Line":35,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"tagliatelle","Text":"json(camel): got 'expires_at' want 'expiresAt'","Severity":"","SourceLines":["\tExpiresAt time.Time `json:\"expires_at\"`"],"Pos":{"Filename":"web/jwt_handlers.go","Offset":3668,"Line":133,"Column":22},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func crypto/rand.Read(b []byte) (n int, err error)","Severity":"","SourceLines":["\t\treturn \"\", err"],"Pos":{"Filename":"web/auth.go","Offset":1562,"Line":61,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from interface method should be wrapped: sig: func (github.com/netresearch/ofelia/web.AuthProvider).GenerateToken(username string) (string, error)","Severity":"","SourceLines":["\treturn jwtProvider.GenerateToken(tokenData.Username)"],"Pos":{"Filename":"web/auth_migration.go","Offset":2941,"Line":109,"Column":9},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func crypto/rand.Read(b []byte) (n int, err error)","Severity":"","SourceLines":["\t\treturn \"\", err"],"Pos":{"Filename":"web/auth_secure.go","Offset":2817,"Line":108,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func crypto/rand.Read(b []byte) (n int, err error)","Severity":"","SourceLines":["\t\treturn \"\", err"],"Pos":{"Filename":"web/auth_secure.go","Offset":3600,"Line":144,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func golang.org/x/crypto/bcrypt.GenerateFromPassword(password []byte, cost int) ([]byte, error)","Severity":"","SourceLines":["\t\treturn \"\", err"],"Pos":{"Filename":"web/auth_secure.go","Offset":8846,"Line":347,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""},{"FromLinter":"wrapcheck","Text":"error returned from external package is unwrapped: sig: func github.com/netresearch/ofelia/core.GetHash(t reflect.Type, v reflect.Value, hash *string) error","Severity":"","SourceLines":["\t\treturn \"\", err"],"Pos":{"Filename":"cli/config.go","Offset":16853,"Line":544,"Column":14},"ExpectNoLint":false,"ExpectedNoLintLinter":""}],"Report":{"Linters":[{"Name":"asasalint"},{"Name":"asciicheck","Enabled":true},{"Name":"bidichk"},{"Name":"bodyclose","Enabled":true},{"Name":"canonicalheader"},{"Name":"containedctx","Enabled":true},{"Name":"contextcheck","Enabled":true},{"Name":"copyloopvar","Enabled":true},{"Name":"cyclop"},{"Name":"decorder"},{"Name":"deadcode"},{"Name":"depguard","Enabled":true},{"Name":"dogsled"},{"Name":"dupl","Enabled":true},{"Name":"dupword"},{"Name":"durationcheck","Enabled":true},{"Name":"errcheck","Enabled":true,"EnabledByDefault":true},{"Name":"errchkjson"},{"Name":"errname","Enabled":true},{"Name":"errorlint","Enabled":true},{"Name":"execinquery"},{"Name":"exhaustive","Enabled":true},{"Name":"exhaustivestruct"},{"Name":"exhaustruct"},{"Name":"exportloopref"},{"Name":"exptostd"},{"Name":"forbidigo","Enabled":true},{"Name":"forcetypeassert"},{"Name":"fatcontext"},{"Name":"funlen"},{"Name":"gci","Enabled":true},{"Name":"ginkgolinter"},{"Name":"gocheckcompilerdirectives"},{"Name":"gochecknoglobals"},{"Name":"gochecknoinits"},{"Name":"gochecksumtype"},{"Name":"gocognit"},{"Name":"goconst","Enabled":true},{"Name":"gocritic","Enabled":true},{"Name":"gocyclo","Enabled":true},{"Name":"godot"},{"Name":"godox"},{"Name":"err113"},{"Name":"gofmt","Enabled":true},{"Name":"gofumpt","Enabled":true},{"Name":"goheader"},{"Name":"goimports","Enabled":true},{"Name":"golint"},{"Name":"mnd"},{"Name":"gomnd"},{"Name":"gomoddirectives"},{"Name":"gomodguard"},{"Name":"goprintffuncname"},{"Name":"gosec"},{"Name":"gosimple","Enabled":true,"EnabledByDefault":true},{"Name":"gosmopolitan"},{"Name":"govet","Enabled":true,"EnabledByDefault":true},{"Name":"grouper"},{"Name":"ifshort"},{"Name":"iface"},{"Name":"importas"},{"Name":"inamedparam"},{"Name":"ineffassign","Enabled":true,"EnabledByDefault":true},{"Name":"interfacebloat"},{"Name":"interfacer"},{"Name":"intrange"},{"Name":"ireturn"},{"Name":"lll"},{"Name":"loggercheck"},{"Name":"maintidx"},{"Name":"makezero"},{"Name":"maligned"},{"Name":"mirror"},{"Name":"misspell","Enabled":true},{"Name":"musttag"},{"Name":"nakedret"},{"Name":"nestif"},{"Name":"nilerr","Enabled":true},{"Name":"nilnesserr"},{"Name":"nilnil","Enabled":true},{"Name":"nlreturn"},{"Name":"noctx","Enabled":true},{"Name":"nonamedreturns"},{"Name":"nosnakecase"},{"Name":"nosprintfhostport","Enabled":true},{"Name":"paralleltest","Enabled":true},{"Name":"perfsprint"},{"Name":"prealloc","Enabled":true},{"Name":"predeclared","Enabled":true},{"Name":"promlinter"},{"Name":"protogetter"},{"Name":"reassign"},{"Name":"recvcheck"},{"Name":"revive","Enabled":true},{"Name":"rowserrcheck"},{"Name":"sloglint"},{"Name":"scopelint"},{"Name":"sqlclosecheck"},{"Name":"spancheck"},{"Name":"staticcheck","Enabled":true,"EnabledByDefault":true},{"Name":"structcheck"},{"Name":"stylecheck"},{"Name":"tagalign"},{"Name":"tagliatelle","Enabled":true},{"Name":"tenv"},{"Name":"testableexamples"},{"Name":"testifylint"},{"Name":"testpackage"},{"Name":"thelper"},{"Name":"tparallel","Enabled":true},{"Name":"typecheck","Enabled":true,"EnabledByDefault":true},{"Name":"unconvert","Enabled":true},{"Name":"unparam","Enabled":true},{"Name":"unused","Enabled":true,"EnabledByDefault":true},{"Name":"usestdlibvars"},{"Name":"usetesting"},{"Name":"varcheck"},{"Name":"varnamelen"},{"Name":"wastedassign"},{"Name":"whitespace"},{"Name":"wrapcheck","Enabled":true},{"Name":"wsl"},{"Name":"zerologlint"},{"Name":"nolintlint","Enabled":true}]}}
